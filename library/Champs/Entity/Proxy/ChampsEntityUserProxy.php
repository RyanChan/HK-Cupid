<?php

namespace Champs\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ChampsEntityUserProxy extends \Champs\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function __set($key, $value)
    {
        $this->_load();
        return parent::__set($key, $value);
    }

    public function __get($key)
    {
        $this->_load();
        return parent::__get($key);
    }

    public function doPrePersist()
    {
        $this->_load();
        return parent::doPrePersist();
    }

    public function doPreUpdate()
    {
        $this->_load();
        return parent::doPreUpdate();
    }

    public function doPostPersist()
    {
        $this->_load();
        return parent::doPostPersist();
    }

    public function getUserFolder()
    {
        $this->_load();
        return parent::getUserFolder();
    }

    public function setProfile(\Champs\Entity\UserProfile $profile)
    {
        $this->_load();
        return parent::setProfile($profile);
    }

    public function setProfileWithKeyAndValue($key, $value)
    {
        $this->_load();
        return parent::setProfileWithKeyAndValue($key, $value);
    }

    public function unsetProfile($key)
    {
        $this->_load();
        return parent::unsetProfile($key);
    }

    public function getProfile($key = NULL)
    {
        $this->_load();
        return parent::getProfile($key);
    }

    public function getCreated()
    {
        $this->_load();
        return parent::getCreated();
    }

    public function getLastUpdated()
    {
        $this->_load();
        return parent::getLastUpdated();
    }

    public function setPassword($password)
    {
        $this->_load();
        return parent::setPassword($password);
    }

    public function setUsername($email)
    {
        $this->_load();
        return parent::setUsername($email);
    }

    public function sendComfirmEmail()
    {
        $this->_load();
        return parent::sendComfirmEmail();
    }

    public function generateActivationKey()
    {
        $this->_load();
        return parent::generateActivationKey();
    }

    public function doUpdateLastLogin()
    {
        $this->_load();
        return parent::doUpdateLastLogin();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'username', 'password', 'password_salt', 'role', 'ts_created', 'ts_last_updated', 'ts_last_login', 'profiles', 'followers', 'followersWithMe', 'events', 'notifications', 'newsfeeds', 'sentMessages', 'receivedMessages', 'albums', 'payments');
    }
}